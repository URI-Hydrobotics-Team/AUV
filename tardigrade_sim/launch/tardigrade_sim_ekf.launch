<?xml version="1.0"?>
<launch>
<!--
    This file is part of the URI Hydrobotics tardigrade software.

    Author: Devin Hunsberger
    Email: dhunsberger@uri.edu
    Year: 2024
-->
    <param name="use_sim_time" type="boolean" value="true"/>

    <arg name="scenario" default="tank"/>

    <arg name="robot_name" default="tardigrade"/>

    <arg name="simulation_data" default="$(find tardigrade)/data"/>
    <arg name="simulation_rate" default="300.0"/>
    <arg name="graphics_resolution_width" default="1920"/>
    <arg name="graphics_resolution_height" default="1060"/>
    <arg name="graphics_quality" default="medium"/>

    <arg name = "is_sim" default = "true"/>

    <node
        name="stonefish_simulator"
        pkg="stonefish_mvp"
        type="parsed_simulator"
        args="-d $(arg simulation_data)
              -r $(arg simulation_rate)
              -w $(arg graphics_resolution_width)
              -h $(arg graphics_resolution_height)
              -n $(arg graphics_quality)"
        output="screen">
        <param name="scenario_description" command="$(find xacro)/xacro robot_name:=$(arg robot_name) '$(find tardigrade)/world/$(arg scenario).scn.xacro'"/>
    </node>
    
    <node pkg="tardigrade" type="cmd_vel_to_thruster.py" name="cmd_vel_to_thruster"/>

    <include file = "$(find pico_controller)/launch/pico_controller.launch">
        <arg name = "is_sim" value = "$(arg is_sim)"/>
    </include>

    <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames -->
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.06 0 0.08 0 0 0 base_link laser 30" />
    <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.09 0 0 0 base_footprint base_link 30" />
    <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
        
    <!-- Extended Kalman Filter from robot_pose_ekf Node-->
    <!-- Subscribe: /odom, /imu_data -->
    <!-- Publish: /robot_pose_ekf/odom_combined -->

    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_footprint"/>
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="false"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="false"/>
        <param name="gps_used" value="false"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>

        <remap from="imu_data" to="/tardigrade/imu/stonefish/data" />

    </node>
        
    <!-- Initial Pose and Goal Publisher -->
    <!-- Publish: /initialpose, /move_base_simple/goal -->
    <node pkg="rviz" type="rviz" name="rviz">
    </node> 
      
 
</launch>